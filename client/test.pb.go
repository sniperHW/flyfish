// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package client

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Equip struct {
	InsID                *uint32  `protobuf:"varint,1,req,name=InsID" json:"InsID,omitempty"`
	ConfigID             *int32   `protobuf:"varint,2,req,name=ConfigID" json:"ConfigID,omitempty"`
	Level                *int32   `protobuf:"varint,3,req,name=Level" json:"Level,omitempty"`
	Exp                  *int32   `protobuf:"varint,4,req,name=Exp" json:"Exp,omitempty"`
	RandomAttribId       *int32   `protobuf:"varint,5,req,name=RandomAttribId" json:"RandomAttribId,omitempty"`
	Refine               []int32  `protobuf:"varint,6,rep,name=Refine" json:"Refine,omitempty"`
	EquipCharacterId     *int32   `protobuf:"varint,7,req,name=EquipCharacterId" json:"EquipCharacterId,omitempty"`
	IsLock               *bool    `protobuf:"varint,8,req,name=IsLock" json:"IsLock,omitempty"`
	GetTime              *int64   `protobuf:"varint,9,req,name=GetTime" json:"GetTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Equip) Reset()         { *m = Equip{} }
func (m *Equip) String() string { return proto.CompactTextString(m) }
func (*Equip) ProtoMessage()    {}
func (*Equip) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *Equip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Equip.Unmarshal(m, b)
}
func (m *Equip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Equip.Marshal(b, m, deterministic)
}
func (m *Equip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Equip.Merge(m, src)
}
func (m *Equip) XXX_Size() int {
	return xxx_messageInfo_Equip.Size(m)
}
func (m *Equip) XXX_DiscardUnknown() {
	xxx_messageInfo_Equip.DiscardUnknown(m)
}

var xxx_messageInfo_Equip proto.InternalMessageInfo

func (m *Equip) GetInsID() uint32 {
	if m != nil && m.InsID != nil {
		return *m.InsID
	}
	return 0
}

func (m *Equip) GetConfigID() int32 {
	if m != nil && m.ConfigID != nil {
		return *m.ConfigID
	}
	return 0
}

func (m *Equip) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *Equip) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *Equip) GetRandomAttribId() int32 {
	if m != nil && m.RandomAttribId != nil {
		return *m.RandomAttribId
	}
	return 0
}

func (m *Equip) GetRefine() []int32 {
	if m != nil {
		return m.Refine
	}
	return nil
}

func (m *Equip) GetEquipCharacterId() int32 {
	if m != nil && m.EquipCharacterId != nil {
		return *m.EquipCharacterId
	}
	return 0
}

func (m *Equip) GetIsLock() bool {
	if m != nil && m.IsLock != nil {
		return *m.IsLock
	}
	return false
}

func (m *Equip) GetGetTime() int64 {
	if m != nil && m.GetTime != nil {
		return *m.GetTime
	}
	return 0
}

type Equips struct {
	Equips               []*Equip `protobuf:"bytes,1,rep,name=equips" json:"equips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Equips) Reset()         { *m = Equips{} }
func (m *Equips) String() string { return proto.CompactTextString(m) }
func (*Equips) ProtoMessage()    {}
func (*Equips) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *Equips) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Equips.Unmarshal(m, b)
}
func (m *Equips) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Equips.Marshal(b, m, deterministic)
}
func (m *Equips) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Equips.Merge(m, src)
}
func (m *Equips) XXX_Size() int {
	return xxx_messageInfo_Equips.Size(m)
}
func (m *Equips) XXX_DiscardUnknown() {
	xxx_messageInfo_Equips.DiscardUnknown(m)
}

var xxx_messageInfo_Equips proto.InternalMessageInfo

func (m *Equips) GetEquips() []*Equip {
	if m != nil {
		return m.Equips
	}
	return nil
}

func init() {
	proto.RegisterType((*Equip)(nil), "client.Equip")
	proto.RegisterType((*Equips)(nil), "client.Equips")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x69, 0x63, 0xb2, 0x7a, 0x64, 0x32, 0x82, 0xc8, 0xc1, 0xab, 0x30, 0x50, 0x82, 0x17,
	0x15, 0x7c, 0x03, 0xd9, 0x86, 0x04, 0x76, 0x15, 0x7c, 0x81, 0xda, 0x9e, 0x69, 0x70, 0x4b, 0x6a,
	0x1b, 0xc5, 0xb7, 0x57, 0x9a, 0x56, 0x2f, 0xdc, 0xdd, 0xff, 0xfd, 0x1f, 0xf9, 0x09, 0x07, 0x20,
	0x52, 0x1f, 0xcb, 0xb6, 0x0b, 0x31, 0x48, 0x51, 0xef, 0x1d, 0xf9, 0xb8, 0xfc, 0xce, 0x80, 0x6f,
	0xde, 0x3f, 0x5c, 0x2b, 0x2f, 0x80, 0x1b, 0xdf, 0x9b, 0x35, 0x66, 0x2a, 0xd7, 0x73, 0x3b, 0x82,
	0xbc, 0x82, 0x62, 0x15, 0xfc, 0xce, 0xbd, 0x98, 0x35, 0xe6, 0x2a, 0xd7, 0xdc, 0xfe, 0xf1, 0xf0,
	0x62, 0x4b, 0x9f, 0xb4, 0x47, 0x96, 0xc4, 0x08, 0x72, 0x01, 0x6c, 0xf3, 0xd5, 0xe2, 0x49, 0xea,
	0x86, 0x28, 0x6f, 0xe0, 0xdc, 0x56, 0xbe, 0x09, 0x87, 0x87, 0x18, 0x3b, 0xf7, 0x6c, 0x1a, 0xe4,
	0x49, 0xfe, 0x6b, 0xe5, 0x25, 0x08, 0x4b, 0x3b, 0xe7, 0x09, 0x85, 0x62, 0x9a, 0xdb, 0x89, 0xe4,
	0x2d, 0x2c, 0xd2, 0x17, 0x57, 0xaf, 0x55, 0x57, 0xd5, 0x91, 0x3a, 0xd3, 0xe0, 0x2c, 0x2d, 0x1c,
	0xf5, 0xc3, 0x86, 0xe9, 0xb7, 0xa1, 0x7e, 0xc3, 0x42, 0xe5, 0xba, 0xb0, 0x13, 0x49, 0x84, 0xd9,
	0x23, 0xc5, 0x27, 0x77, 0x20, 0x3c, 0x55, 0xb9, 0x66, 0xf6, 0x17, 0x97, 0x77, 0x20, 0xd2, 0x4a,
	0x2f, 0xaf, 0x41, 0x50, 0x4a, 0x98, 0x29, 0xa6, 0xcf, 0xee, 0xe7, 0xe5, 0x78, 0xa4, 0x32, 0x79,
	0x3b, 0xc9, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x27, 0x80, 0x18, 0x47, 0x01, 0x00, 0x00,
}
