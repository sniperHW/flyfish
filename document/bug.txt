1 多线程执行加载的时候发生字段错乱

原因：最开始时的设计是，单个表由单一加载器加载，因此字段Receiver是独享的，后来改为一个表可以被任何一个加载器加载。
当多个加载器同时加载同一个表时，字段Receiver被多个线程访问，导致字段错乱。

解决：将字段Receiver改为每次加载时单独生成后问题解决。

2 raft操作日志出现kick之后立即跟update的情况。

原因：执行lurkick的时候，没有禁止正常命令的执行。在kick未完全执行完之前后跟一个更新操作就会导致这个情况的出现。
解决：在kick的时候禁止其它操作执行后问题解决。

3 偶尔出现字段丢失的情况

原因：当客户端请求set部分字段的时候，如果此时kv不在缓存中，将kv加载到缓存后，set的处理将客户端请求更改的字段直接初始化kv的字段。
因为set的是部分字段，导致没有被设置到的字段丢失。

解决：kv字段用加载的字段初始化，用set修改的字段替换掉相应字段。


