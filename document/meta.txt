flykv依赖DB的表格定义,表格定义称为元数据

flykv接到一个请求，需要判断表格是否在元数据中存在，字段是否在元数据中存在，字段的类型跟元数据中的是否匹配。

如果无法通过检测，将直接返回错误。

在kv回写的时候，需要使用kv关联的元数据，生成DB更新操作。

DB表格定义

如果需要删除表格，对表格重命名，删除字段，对字段重命名，更改字段类型。应该在flyfish完全停机，且所有数据均已回写DB的情况下进行。

完成上述操作后，更新对应的元数据定义，清除flykv的raft日志。然后重启系统。

在flyfish运行的情况下，只允许添加表格和增加字段。


DB变更操作

1）对DB进行变更。注意，所有新增字段都要设置默认值（如果flyfish尚未获取到元数据的更新，此时执行insert语句将会失败，设置了默认值insert对缺失的字段
使用默认值填充）。


2）通知flyfish变更元数据。


3）flyfish响应更新成功后，与变更相关的操作才能正常执行。


flyfish元数据的变更


任意一个store都可能处理任何一个表格，因此变更处理需要做成事务。一旦事务完成，所有store都更新到最新元数据。

变更事务。

变更事务只允许存在一个，如果前一个事务尚未完成不允许启动新的事务。

flypd向所有store发送变更通知，携带最新的meta。

store leader接收通知，将通知复制到所有副本，一旦复制到一个多数集，应用最新meta，响应更新成功。

flypd接收到所有store的响应后变更结束。

如果flypd未能接收到所有的响应，则定时再次向所有store发送通告，直到接收到所有的响应。


meta携带版本号，leader发现版本号与当前一致，直接响应。

为了避免错误。在meta变更事务尚未完成的情况下，不允许执行集群配置变更相关的操作。



kv对meta的使用


1）接收到客户端请求时，使用tablemeta检查参数


2）从数据库加载时，使用tablemeta填充默认值


3）回写时，使用tablemeta生产更新操作


需要确保在每次使用时取得最新meta






















































































